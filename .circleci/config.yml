version: 2.1
jobs: 
  build: 
    docker:
      - image: circleci/ruby:2.7.1-node
        environment:
          RAILS_ENV: test

      - image: circleci/postgres:13.3
        environment:
          - POSTGRES_HOST_AUTH_METHOD: trust
          - POSTGRES_ROOT_HOST: '%'

    working_directory: ~/repo

    steps: 
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "~/repo/api/Gemfile.lock" }}
            - v1-dependencies-
          working_directory: ~/repo/api

      - run:
          name: install dependencies
          command: |
            gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
          working_directory: ~/repo/api

      - save_cache:
          paths: 
            - .vendor/bundle
          key: v1-dependencies-{{ checksum "~/repo/api/Gemfile.lock" }}
          working_directory: ~/repo/api

      - run: mv api/config/database.yml.ci api/config/database.yml

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s

      # Database setup
      - run: 
          command: bundle exec rake db:create
          working_directory: ~/repo/api
      - run:
          command: bundle exec rake db:migrate
          working_directory: ~/repo/api

      # run tests
      - run:
          name: RSpec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES
          working_directory: ~/repo/api

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
